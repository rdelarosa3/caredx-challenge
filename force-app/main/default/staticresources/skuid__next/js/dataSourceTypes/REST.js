skuid.runtime.registerApi("v2","dataSourceTypes/REST",function(e){var t=function(e){var t={};function r(a){if(t[a]){return t[a].exports}var n=t[a]={i:a,l:false,exports:{}};e[a].call(n.exports,n,n.exports,r);n.l=true;return n.exports}r.m=e;r.c=t;r.d=function(e,t,a){if(!r.o(e,t)){Object.defineProperty(e,t,{enumerable:true,get:a})}};r.r=function(e){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})};r.t=function(e,t){if(t&1)e=r(e);if(t&8)return e;if(t&4&&typeof e==="object"&&e&&e.__esModule)return e;var a=Object.create(null);r.r(a);Object.defineProperty(a,"default",{enumerable:true,value:e});if(t&2&&typeof e!="string")for(var n in e)r.d(a,n,function(t){return e[t]}.bind(null,n));return a};r.n=function(e){var t=e&&e.__esModule?function t(){return e["default"]}:function t(){return e};r.d(t,"a",t);return t};r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)};r.p="";return r(r.s=725)}({725:function(t,r){(function(e){let t=e.$,r=e.utils,a=e.dataSource.utils,n=a.REST,o=r.startsWith,i=r.endsWith,s=r.contains,l=r.isString,d=r.isUndefined,p=r.getObjectProperty,u=r.hasObjectProperty,c=r.makeXMLDoc,f=r.combineUrls,h=e.constants.MIME_TYPES.FORM_URL_ENCODED,m=e.constants.DATASOURCE.SEARCH_CONDITION,y="readwrite",b=r.grab,g="XML",v=function t(){return e.builder?e.builder.core:null},S=function e(r,a){let n=a.methods,o;if(n&&n.length){t.each(n,function(e,t){if(t.type===r){o=t;return false}})}return o},R=function e(t,r){let a=S(t,r);if(a){return a}else{return{type:t,verb:r.verb,endpoint:r.endpoint}}},T=function e(t,r){return!!S(t,r)},P=function e(t,r,a,n){return f(t,r)+"__"+a+(n?"__"+n:"")},C=function e(t){let a=r.getDisplayTypeOfEntity(t);if(a==="INTEGER")return"DOUBLE";else return a},q=function e(t,a){let n=C(a),o=r.escapeFieldName(t),i,s={id:o,label:ae(t),isPolymorphic:false,isNamePointing:false,displaytype:n};if(n==="ARRAY"){let e=null;if(a.length){e=C(a[0])}s.rel=o;s.ref=o;s.referenceTo=[{objectName:o,displaytype:e,label:t,relationshipName:o}]}else if(n==="OBJECT"){s.rel=o;s.ref=o;s.referenceTo=[{objectName:o,label:t,relationshipName:o}]}else if(n==="DOUBLE"){i=""+a;if(a%1===0){s.precision=i.length;s.scale=0}else{let e=i.split(".");s.precision=e[0].length;s.scale=e.length===2?e[1].length:0}}return s},x={},M=function a(n,o={}){let i=r.Deferred(),s=L(n),l,d,p,u=n.dataSource,c,h,m,y,b;if(s){l=s.endpoint||s.serviceUrl;d=s.verb;p=s.dataType;c=s.pathToContent;m=s.payloadContentType;y=s.useResponseSnippet==="true";b=s.sendChanges==="custompayloadinbody"}if(!l||!d||!u){return i.reject("Cannot retrieve metadata for Model without a valid Data Source, Service Url, and Request Method.").promise()}if(s&&s.type!=="query"||b||y){if(n&&n.fields&&n.fields.length){let e={};t.map(n.fields,function(t){let r=t.displaytype,a;if(r==="BOOLEAN"){a=true}else if(r==="DATE"||r==="DATETIME"){a=new Date}else if(r==="DOUBLE"||r==="NUMBER"||r==="PERCENT"){a=2.2}else if(r==="INTEGER"){a=2}else if(r==="PHONE"){a="(800) 222-3333"}else if(r==="EMAIL"){a="j@g.co"}else if(r==="ARRAY"){a=[]}else if(r==="OBJECT"){a={}}else{a="a"}e[t.id]=a});return i.resolve(e).promise()}else{if(b||y)i.resolve();return i.reject('Unable to retrieve metadata for this Model. If a query method cannot be defined for this Model (i.e. if its purpose is purely for creating/modifying/deleting records, then please click "Add Field" to manually add the fields that you would like to use.').promise()}}h=P(u.serviceUrl,l,d,c);if(x[h]){return x[h]}else{let a=r.extractFieldsFromTemplate(l,{ignoreFunctions:true}),s={},c={},y={},b,S,R=o.performingSearch,T=function e(r,a){let n=r.split("."),o=y;t.each(n,function(e,t){if(e===n.length-1){o[t]=a}else{if(!o[t]){o[t]={}}o=o[t]}})},P=function e(t){let a=r.Deferred(),o=oe(n,{url:t,method:d,dataType:p,type:"query"},{isSample:true});x[h]=i.promise();const s=function e(){delete x[h]};o.then(function(e){let t=e.body;if(m===g){t=r.XMLToJSON(r.parseAsXMLIfString(t))}s();a.resolve(re(t))}).catch(function(e){s();a.reject(e)});return a.promise()},C=function a(o){let s=r.generateUniqueId(),d=[],p={},u,c,f,h;t.each(o,function(e,t){let r={};r.uiOnly=true;r.id=t.key;r.label=e;r.displaytype="TEXT";r.createable=r.editable=r.accessible=true;d.push(r);if(typeof t.data!=="undefined"){p[r.id]=t.data}});u=new e.model.Model({id:s,accessible:true,createable:true,fields:d,doClone:false,dataSourceName:"Ui-Only"});u.initialize().register();c=u.createRow();if(r.size(p)){u.updateRow(c,p)}let m=l;t.each(d,function(e,t){m=m.replace(t.label,"<b>"+t.label+"</b>")});f=function e(){i.reject("All parameters for Model URL not provided --- unable to retrieve metadata for Model");u.unregister()};h=function e(){let a={};t.each(d,function(e,t){let r=t.label,n=t.id,o=u.getFieldValue(c,n,true);T(r,o);a[r]=o});b.updateSettings(a);t.blockUI({message:"Retrieving metadata from REST Data Source..."});P(r.mergeAsText("global",l,{apiExtensions:y})).then(function(e){i.resolve(e);t.unblockUI();g.getCPI().close()}).catch(function(e){t.blockUI({message:e,timeout:5e3})})};const g=e.utils._floatingComponentFactory.createModal({title:"REST Data Source Variables",components:[{componentType:"skuid__text",contents:'Sample values for the following merge variables are \n\t\t\t\t\t\t\t\t\t\tneeded to retrieve metadata. If no values are provided, \n\t\t\t\t\t\t\t\t\t\tmetadata for this model may not be up-to-date.\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t\t<strong style="font-size:14px">Model</strong>\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t\t'.concat(n.id,'\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t\t<strong style="font-size:14px">Service URL</strong>\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t\t<div style="word-break: break-all">\n\t\t\t\t\t\t\t\t\t\t\t').concat(m.replace(/({)/g,"&#123;").replace(/(})/g,"&#125;"),'\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t\t<strong style="font-size:14px">Merge Variables</strong>'),allowHTML:true},{componentType:"skuid__form",mode:"edit",model:u,sections:[{rows:d.map(e=>({fields:[{id:e.id}]}))}],styles:{spacing:{marginBottom:2}}}],buttons:[{label:"Retrieve metadata",styleSettingsVariant:"primary",onClick:h},{label:"Cancel",onClick:()=>g.getCPI().close()}],onClose(){f()}});t.unblockUI()};if(a&&a.length){if(e.builder&&!R)b=v().createModelSettingsService(n.id);S=b?b.getSettings():{};t.each(a,function(e,t){let r,a="var"+e;if(o.ignoreCache!==true){r=S[t]}c[t]={key:a,data:r};if(typeof r!=="undefined"){T(t,r)}else{s[t]={key:"var"+e}}});if(r.size(s)&&!R){C(s)}else{P(r.mergeAsText("global",l,{apiExtensions:y})).then(function(e){i.resolve(e)}).catch(function(e){C(c,{error:"Unable to retrieve metadata for Model: "+e+". Please check that sample parameters for the Model URL are valid, and then re-request metadata."})})}}else{P(l).then(function(e){i.resolve(e)}).catch(function(e){i.reject('Error connecting to REST Data Source at URL "'+f(u.serviceUrl,l)+'": '+e)})}}return i.promise()},w=function e(r){let a=r.entity,n=r.result,o=a.path,s=[],l=[],d={fields:s,childRelationships:l,methods:a.methods,endpoint:a.serviceUrl},u=a.pathToContent,c;if(u){n=p(n,u)}if(o&&(i(o,".")||i(o,":")))o=o.substring(0,o.length-1);if(o)c=p(n,o);else c=n;if(t.isArray(c)&&c.length)c=c[0];if(c){t.each(Object.keys(c),function(e,t){let r=c[t],a=q(t,r);s.push(a)})}N(d);return d},E=function r(a){let n=a.model;let o=new e.model.Model(n);if(a.ignorePathToContent){delete o.pathToContent}t.extend(o,{path:a.path||""});return o},I=function e(){return"Loading sample body for REST Data Source..."},L=function e(t){let r,a;if(t.type===y){a=t.methods.filter(function(e){return e.type==="query"});if(a.length){r=a[0]}else{r=t.methods&&t.methods.length?t.methods[0]:false}}if(!r){let e=t.extensions&&t.extensions.rest;r={endpoint:t.serviceUrl||t.endpoint,verb:t.verb,pathToContent:t.pathToContent,type:"query"};if(e){r.payloadSnippet=e.payloadSnippet;r.responseSnippet=e.responseSnippet;r.sendChanges=e.sendChanges;r.useResponseSnippet=e.useResponseSnippet;r.paginationMethod=e.paginationMethod;r.offsetParameter=e.offsetParameter;r.limitMethod=e.limitMethod;r.simpleRecordsLimitParameter=e.simpleRecordsLimitParameter;r.contentType=e.contentType;r.payloadContentType=e.payloadContentType;r.customRequestTemplate=e.customRequestTemplate}}return r},A=function e(t){let a=L(t);return P(t.dataSource.serviceUrl,a.endpoint||a.serviceUrl,a.verb,r.combineStrings(a.pathToContent,t.path,"."))},O=function e(r){if(r.attr("payloadsnippet")&&r.attr("sendchanges")==="custompayloadinbody"){return true}else{let e=false;r.find("method[type='query']").each((r,a)=>{let n=t(a);if(n.attr("payloadsnippet")&&n.attr("sendchanges")==="custompayloadinbody"&&n.attr("verb")!=="GET"){e=true}else{return false}});if(e)return true}return false},F=function e(r){if(!r)r={};let a=r.entities,n=r.dataSource;return Promise.all(t.map(a,function(e){if(n&&!e.dataSource)e.dataSource=n;return M(e,{ignoreCache:r.ignoreCache,performingSearch:r.performingSearch})}))},N=function r(a){if(!a.fields)a.fields=[];let n=T("query",a)||a.verb==="GET",o=T("insert",a)||a.verb==="POST",i=T("update",a)||a.verb==="PATCH"||a.verb==="PUT",s=T("delete",a)||a.verb==="DELETE";t.each(a.fields,function(t,r){r.accessible=true;if(!r.uiOnly){if(r.createable&&!o)r.createable=false;if(r.editable&&!i)r.editable=false}if(!r.displaytype){r.displaytype=e.constants.DISPLAY_TYPES.TEXT}if(r.filterable!==false)r.filterable=true});a.accessible=true;a.createable=o;a.updateable=i;a.deleteable=s;a.queryable=a.filterable=n;a.objectName=a.serviceUrl||a.methods&&a.methods.length&&a.methods[0].endpoint},U=function t(r,a,n,o){r.data=e.snippet.get(n)({model:a});r.dataType=o;return r},j=function t(r,a){return e.snippet.get(a)({response:r})},D=function e(r,a,n){let o=t.extend({},r);t.each(n,function(e,t){if(d(r[t])){o[t]=a[t]}});return o},k=function e(t,a){if(t.customRequestTemplate){return r.mergeAsDataInContext(t.customRequestTemplate,a.context)}else{return{}}},_=function e(a,n){const o=[];t.each(a,function(e,a){let i=r.Deferred(),s=L(a),l={},u;o.push(i.promise());if(!s||s.type!=="query"){i.resolve({data:[],lastLoadTime:(new Date).getTime()});return true}u={url:s.endpoint||s.serviceUrl,method:s.verb,dataType:s.dataType,type:s.type};if(u.method!=="GET"&&s.sendChanges&&s.sendChanges==="usetemplaterequest"){u.data=k(s,{})}else if(s.payloadSnippet&&u.method!=="GET"&&s.sendChanges==="custompayloadinbody"){u=U(u,a,s.payloadSnippet,s.contentType)}l.coerceCreateHTTPRequest=function(e){const t=s.type==="query",n=t&&ee(s),o=t&&a.recordsLimit&&!d(s.limitMethod);if(!n&&!o)return;const i=e.url,l=i&&i.includes("?"),p=l?i.substring(i.indexOf("?")+1):"",u=l?i.substring(0,i.indexOf("?")):i,c={},f=s.offsetParameter;if(n){const e=a.paginationOffset;if(!d(f)&&!d(e)){c[f]=e}}if(o){const e=s.simpleRecordsLimitParameter,t=d(f)?a.recordsLimit:a.recordsLimit+1;if(!d(e)&&!d(t)){c[e]=t}}e.url=u+"?"+p+(l?"&":"")+r.param(c)};oe(a,u,l).then(function(e){let o,s,l={},d=L(a);o=re(e.body);if(ee(d)&&te(d)){let e=Z(o,d,a);if(e){l.canRetrieveMoreRows=true;a.paginationOffset=e}else{l.canRetrieveMoreRows=false;delete a.paginationOffset}}if(d.useResponseSnippet==="true"&&d.responseSnippet){o=j(e,d.responseSnippet)}if(d.payloadContentType===g){o=r.XMLToJSON(r.parseAsXMLIfString(o))}if(o&&a.pathToContent){s=p(o,a.pathToContent)}else if(o){s=o}if(s&&!t.isArray(s)){s=[s]}if(n.performingSearch){i.resolve({request:{dataSource:a.dataSource},results:[{label:a.label,objectName:a.objectName,objectMapKey:a.objectMapKey,modelName:a.id,records:s}]})}else{l.lastLoadTime=(new Date).getTime();l.data=s;l.debug=a.debug;l.soql=l.objectName=u.url;l.conditions=a.conditions;l.conditionLogic=a.conditionLogic;l.fields=a.fields;l.orderByClause=a.orderByClause;l.recordsLimit=a.recordsLimit;i.resolve(l)}}).catch(function(e){i.reject(e)})});return Promise.all(o)},B=function a(n){const o=[],i=[],c=[],f=[],m=[];let y;function g(t,a,n){let o=t.sendChanges||"asjsoninbody";if(o==="asjsoninbody"){a.data=n}else if(o==="asnestedjsoninbody"){a.data={};r.setObjectProperty(a.data,t.pathToContent,n)}else if(o==="custompayloadinbody"){a.data=e.snippet.get(t.payloadSnippet)({changes:n,model:a.context.model});a.dataType=t.contentType}}function v(a,n,o){let i=a.changeMapping==="autoprefix";let l={};let d=a.sendChanges||"asjsoninbody";let p=a.requestBodyFields;t.each(o,function(e,t){l[(i?a.changeMappingPrefix:"")+e]=t});if(d==="asjsoninbody"){n.data=l;if(a.type==="delete"||a.type==="update"){if(p&&p.length)n.data=D(n.data,n.context.row,p)}}else if(d==="asnestedjsoninbody"){n.data={};if(a.type==="delete"||a.type==="update"){if(p&&p.length)l=D(l,n.context.row,p)}r.setObjectProperty(n.data,a.pathToContent,l)}else if(d==="custompayloadinbody"){n.data=e.snippet.get(a.payloadSnippet)({changes:l,model:n.context.model,row:n.context.row});n.dataType=a.contentType}else if(d==="asformdatainbody"){n.dataType=h;n.data=r.param(l)}else if(d==="inheaderperfield"){n.headers=l}else if(d==="inqueryparamperfield"){n.url+=(s(n.url,"?")?"&":"?")+r.param(l)}else if(d==="usetemplaterequest"){n.data=k(a,n)}}t.each(n.operations,function(a,n){let s=e.$M(n.id),h=[],S=R("insert",s),T=R("update",s),P=R("delete",s),C=function e(t,r,a){let n={key:t,item:r};let o;if(!a.isBatch){o={url:a.endpoint,method:a.verb,context:{model:s,row:s.getRowById(t)}};n.httpRequest=o;n.request={type:a.type,originalRecordId:t,originalRecord:s.getRecordById(t).get(),request:o,method:a}}return n},q=t.map(n.deletes,function(e,t){return C(t,e,P)}),x=t.map(n.updates,function(e,t){return C(t,e,T)}),M=t.map(n.inserts,function(e,t){return C(t,e,S)});[{entries:q,method:P,type:"delete"},{entries:x,method:T,type:"update"},{entries:M,method:S,type:"insert"}].forEach(function(e){let r=e.entries,a=e.method;if(r.length){if(a.isBatch){let n={type:e.type,originalRecordIds:t.map(r,function(e){return e.key}),request:{url:a.endpoint,method:a.verb,context:{model:s}},method:a};let o={};t.each(r,function(e,t){o[t.key]=t.item});g(a,n.request,o);h.push(n)}else{r.forEach(function(e){v(a,e.httpRequest,e.item);h.push(e.request)})}}});let w=function e(a){let o=a.request,h=o.type,b=o.method,g=a.response,v=g?g.body:null,S=g?g.headers:null,R=a.error,T=[],P=[],C={errors:T,messages:P,source:n.id},q=a.isSuccess,x=b.successIf,M=b.successField,w=b.successValue,E,I=h==="insert",L,A;if(v&&l(v)){v=re(v)}if(q){if(x==="responsefieldispresent"){q=u(v,M)}else if(x==="responsefieldistrue"){q=p(v,M,true)===true}else if(x==="responsefieldequals"){q=p(v,M,true)==w}else if(x==="responseheaderispresent"){q=u(S,M,true)}else if(x==="responseheaderequals"){q=p(S,M)==w}else if(x==="responsebodyequals"){q=v===w}}C.success=q;if(q){}else{y=true;if(R){T.push({message:R,severity:"ERROR"})}else{L=ne(g);if(L){T.push({message:L,severity:"ERROR"})}}}if(b.isBatch){A=h==="delete"?i:I?c:f;t.each(o.originalRecordIds,function(e,r){let a={success:C.success,errors:[],messages:[],source:n.id};if(I){a.oldId=r}else if(!I&&r){a.id=r}if(v&&t.isPlainObject(v[r])){a.record=v[r]}A.push(a)});if(T.length){Array.prototype.push.apply(m,T)}}else{if(I){C.oldId=o.originalRecordId;if(q){let e=b.insertResponse||"recordinbody",r=b.createdRecordIdLocation,a={},n;E=o.originalRecord;t.extend(a,E);if(e==="recordinbody"){t.extend(a,v);n=se(a,s)}else if(e==="idinbodyfield"){n=p(v,r)}else if(e==="idinheader"){n=p(S,r)}if(!d(n)){C.id=n}C.record=a}c.push(C)}else if(h==="update"){let e=b.updateResponse;C.id=o.originalRecordId;if(q){if(e==="recordinbody"&&r.isObject(v)){C.record=t.extend({},E,v)}}f.push(C)}else if(h==="delete"){C.id=o.originalRecordId;i.push(C)}}};t.each(h,function(e,t){let r=oe(s,t.request);r.then(function(e){let r=b(t,"method","responseSnippet");e.body=re(e.body);if(r)e=j(e,r);w({request:t,response:e,isSuccess:true})}).catch(function(e){w({request:t,error:e,isSuccess:false})});o.push(r)})});return r.settle(o).then(()=>({deleteResults:i,globalErrors:m,insertResults:c,totalsuccess:!y,updateResults:f}))},V=function e(t){return{conditions:[{name:"param",sourceType:"param",sourceParam:"param",value:t.param,operator:"=",encloseValueInQuotes:false,inactive:false},{name:"fieldsParam",sourceType:"param",sourceParam:"fieldsParam",value:t.fieldsParam,operator:"=",encloseValueInQuotes:false,inactive:false}],properties:[{id:"param",label:"Search Parameter",type:"text"},{id:"fieldsParam",label:"Fields Parameter",type:"text"}]}},G=function r(a,n,o){let i=this,s=t.map(a.returning,function(e,r){let s=false,l=false,d=n&&n[r],p=o[e.modelName],u=p.fields,c="",f;t.each(u,function(e,t){let r=typeof t==="object"?t.id:t;c+=r+","});c=c.substring(0,c.length-1);if(r.indexOf("?")===-1){f=r+"?{{param}}={{search}}{{#fieldsParam}}&{{fieldsParam}}={{fields}}{{/fieldsParam}}"}else f=r+"&{{param}}={{search}}{{#fieldsParam}}&{{fieldsParam}}={{fields}}{{/fieldsParam}}";p.type=y;p.methods=[{serviceUrl:f,verb:"GET",type:"query",dataType:"application/json"}];t.each(p.conditions,function(e,t){if(t.name==="__global_search"){s=true;if(t.value!==a.query){t.value=a.query}}else if(t.name==="__fields"){l=true;if(t.value!==c){t.value=c}}});if(!s){p.addCondition({name:"__global_search",sourceType:"param",sourceParam:"search",value:a.query,operator:"=",encloseValueInQuotes:false,inactive:false})}if(!l){p.addCondition({name:"__fields",sourceType:"param",sourceParam:"fields",value:c,operator:"=",encloseValueInQuotes:false,inactive:false})}if(i.searchProperties&&d){t.each(i.searchProperties(d).conditions,function(e,t){p.addCondition(t)})}return p});return i.load(s,{dataSource:e.dataSource.getDataSource(a.dataSourceName),loadAllMetadata:true,performingSearch:true,ignoreCache:true}).then(function(e){return e})},H=function e(t,r){let a=r&&r.getField(t);if(a){return a.rel}},J=function r(){return{getOverrideSearchProperties:function e(){return[{type:"helptext",html:"Specify a route to search for related records. Your URL must include a {{search}} merge as a placeholder for a string containing the user's entered search text."},{id:"searchroute",type:"string",placeholder:"e.g. /api/users?query={{search}}",label:"Search Route"}]},getOverrideBatchProperties:function e(){return[{type:"helptext",html:"Specify a route to get the labels for related records in a single batch. The URL must include an {{ids}} merge as a placeholder for a comma-separated list of keys to load.<br/><br/>(This is not needed if the related records are from the same Data Source as this Model and if your Model's query method returns the related record's labels as well as ids.)"},{id:"batchlabelroute",type:"string",placeholder:"e.g. /api/users?ids={{ids}}",label:"Item Labels Route"}]},getOverrideBatchFieldChildrenFunction:function e(){return function(){return null}},getMetadataHandler:function r(a,n,o,i){let s=a.children("batchfields").first();let l=s&&s.attr("batchlabelroute");let d=a.attr("ogdisplaytype");let p=a.attr("keyfield");n.rel=a.attr("rel");n.searchRoute=a.attr("searchroute");n.keyField=p;n.originalDisplayType=d;if(s&&l){let r=e.dataSource.getDataSourceFromXML(a);let d=new e.model.Model({dataSource:r});let u=s.children("batchfield");d.id="_ReferenceLabelModel_"+(new Date).getTime()+n.rel;if(u&&u.length){d.fields=t.map(u,function(e){return{id:t(e).attr("field")}})}else{d.fields=[{id:p}]}d.doQuery=true;d.doClone=false;d.serviceUrl=l;d.verb="GET";d.initialize();let c=new e.model.Condition;c.name="__reference_batch";c.sourceParam="ids";d.addCondition(c);if(!o.batchLabelModels)o.batchLabelModels={};o.batchLabelModels[i]=d}},getReferenceValue:function e(r,a){let n=a.keyField,o;if(n)return r[n];else{o=ie();return r[t.isArray(o)?o[0]:o]}},getRowFromReferenceValue:function e(r,a,n){let o=ie(r);let i=r.getRows([{field:n.keyField||(t.isArray(o)?o[0]:o),value:a}]);return i&&i.length?i[0]:{}},processReferenceLookupModel:function t(r,a){r.serviceUrl=a.searchRoute;r.verb="GET";r.label=a.id;r.labelPlural=a.id;let n=new e.model.Condition;n.name=m;n.sourceParam="search";r.addCondition(n)},getBatchFieldsCategoryLabel:function e(){return"Item Labels Route"}}},X=function e(t){return r.contains(t,".")},z=function a(){let n=(a,n,o,i,s)=>{const l=o.uploadMethod.dataSource;const d=o.filename||a.name;i({fileName:d});r.readFileAsBase64(a).then(i=>{const s={FileName:d,Body:i,ContentType:a.type};let p=o.url;if(n.row&&n.model){s.ParentId=n.model.getRowId(n.row);p=r.mergeAsDataInContext(p,r.getContextToUse(n))}const u=l.createHTTPRequest({url:(l.serviceUrl||"")+p,method:"POST"});u.headers.Accept=e.constants.MIME_TYPES.JSON;u.headers["Content-Type"]=e.constants.MIME_TYPES.JSON;t.extend(u,{body:s});return l.makeRequest(u)}).then(e=>{s({newFileId:e&&e.body&&e.body.id,newFieldValue:e&&e.body&&e.body.id,body:e&&e.body})}).catch(t=>{s({message:e.ajax.getErrorMessage(t)})})};return{uploadfile:{label:"Generic REST Upload",upload:n,builderProps:[{id:"url",type:"text",label:"Upload URL"}]},uploadfilewithcontext:{label:"Generic Rest Upload (With Context)",upload:n,builderProps:[{id:"url",type:"text",label:"Upload URL"}],needsRecordContext:true,getFileIdField:e=>e,getFileNameField:e=>e,getSrc:e=>{const t=e.component;const a=b(t,"options","xmlDef");let n=a&&a.attr("url");if(n){if(t.row&&t.model){n=r.mergeAsDataInContext(n,r.getContextToUse(t))}return r.resolve((e.dataSource.serviceUrl||"")+n)}return""},deleteFile:e=>{const t=e.component;const a=e.dataSource;const n=b(t,"options","xmlDef");let o=n&&n.attr("url");if(o){if(t.row&&t.model){o=r.mergeAsDataInContext(o,r.getContextToUse(t))}}let i=a.createHTTPRequest({url:(a.serviceUrl||"")+o,method:"DELETE"});return a.makeRequest(i)}}}},W=function e(a){if(!a)a={};let n=a.component,s=n.get("xmlState"),l=a.propertiesViewer,d=a.onChange||function(){n.rebuildProps(l)},p=[],u=[{name:"Method",props:p}],c=a.type,f=c==="delete",h=s.closest("model"),m=h.attr("id"),y=t.inArray(c,["update","insert"])!==-1,b=s.attr("sendchanges"),g=s.attr("successif"),S=s.attr("batch")==="true",R=s.attr("verb")&&s.attr("verb")!=="GET"?true:false,T=s.attr("type")&&(s.attr("type")==="update"||s.attr("type")==="delete")?true:false,P=s.attr("sendchanges")&&(s.attr("sendchanges")==="asjsoninbody"||s.attr("sendchanges")==="asnestedjsoninbody")?true:false,C=s.attr("useresponsesnippet")==="true",q=s.attr("sendchanges")&&s.attr("sendchanges")==="usetemplaterequest"?true:false,x=s.attr("paginationmethod")==="simple",M=s.attr("limitmethod")==="simple",w=[],E=c+"s",I={value:"custompayloadinbody",label:"As custom payload format in request body"},L={value:"usetemplaterequest",label:"As templated request body"},A;if(S){if(c==="update"){w.push({value:"asjsoninbody",label:"As JSON Object in request body"},{value:"asnestedjsoninbody",label:"As nested JSON Object in request body"},I)}else{w.push({value:"asjsoninbody",label:"As JSON Array in request body"},{value:"asnestedjsoninbody",label:"As nested JSON Array in request body"},I)}}else{if(c==="query"||c==="delete"){w.unshift({value:"",label:"--None--"});if(c==="delete"){w.push({value:"asjsoninbody",label:"As JSON in request body"})}w.push(I,L)}else{w.push({value:"asjsoninbody",label:"As JSON in request body"},{value:"asnestedjsoninbody",label:"As nested JSON in request body"},{value:"asformdatainbody",label:"As URL-Encoded Form data in request body"},{value:"inheaderperfield",label:"In request headers - one per changed field"},{value:"inqueryparamperfield",label:"In URL parameters - one per changed field"},I,L)}}p.push({id:"endpoint",type:"template",location:"attribute",displayAs:"textarea",modelName:S?null:m,label:"Data Source URL",helptext:"The relative URL to access on the Data Source. May contain merge syntax, e.g. /products/list , /product/{{Id}} ."});p.push(v().getDataSourceAccessMethodProperty({onChange:d,type:a.type,state:s}));if(q&&R){p.push({id:"customrequesttemplate",type:"template",location:"attribute",displayAs:"textarea",modelName:S?null:m,label:"Custom Request",helptext:'The custom request template. May contain merge syntax, e.g. products/{{id}} or <id="{{Id}}"> .'})}p.push(v().getResponseInterceptionProperty({component:n,propertiesViewer:l}));if(C){p.push({id:"responsesnippet",type:"snippet",label:"Response Payload Snippet",helptext:"The snippet to run upon a successful request. The snippet receives the initial request payload as an argument. This snippet then must return a response, which Skuid will use as if it were the payload of the request."})}if(y||f){p.push({id:"batch",type:"boolean",label:"URL expects batch "+E,helptext:"If true, then Skuid will send all "+E+" in a single batch request. Otherwise, a separate HTTP request"+" will be made for each "+c+"d row",onChange:function e(){s.removeAttr("insertresponse createdrecordidlocation pathtocontent").attr("sendchanges","asjsoninbody");n.save();d()}})}if(c==="query"){p.push(v().getPathToContentProperty({component:n}));p.push(v().getPayloadContentTypeProperty({onChange:function e(t){s.attr("payloadcontenttype",t);n.save().refresh()}}))}if(R){p.push({id:"sendchanges",label:c==="query"||c==="delete"?"Request body contents":"Send "+(a.type==="update"?"updated":"new")+" field values...",type:"picklist",defaultValue:w[0].value,picklistEntries:w,onChange:d});if(b==="custompayloadinbody"){p.push({id:"payloadsnippet",type:"snippet",label:"Payload Generation Snippet",helptext:"The name of the Snippet to run. "+"Must return a payload, which will be inserted "+"into the request body. "+"Will be handed an object containing the new/changed data (In non-query methods)."},{id:"contenttype",type:"string",label:"Payload Content Type",defaultValue:"application/json",helptext:"The content type of the payload returned "+"by the Payload Generation Snippet, e.g. "+"application/xml, text/plain, application/soap+xml"})}}else{s.removeAttr("payloadsnippet")}if(y||S&&f){if(b==="asnestedjsoninbody"){A={id:"pathtocontent",type:"string"};if(S){A.helptext="Skuid will generate an Array of";if(f){A.label="Location of Array of deleted row keys";A.helptext+="the primary keys of deleted rows "}else if(c==="insert"){A.label="Location of Array of new rows";A.helptext+="each new row's field values "}else if(c==="update"){A.label="Location of Array of updated rows";A.helptext+="each changed row's field values"}A.helptext+="and place this within a wrapper object at a location you specify."+'For instance, if this property is set to "data", then '+"the request body will be ' { \"data\": [...] } '."}else{A.label="Location of nested changes";A.helptext="Skuid will nest row changes at this location"+"within the JSON request body. "+'For instance, if this property is set to "data", then '+'the request body will be \'{ "data": { "field":"value"  } }\'.'}p.push(A)}}if(y){if(i(b,"perfield")){let e=b==="inheaderperfield"?"header":"parameter";p.push({id:"changemapping",label:"Field name to "+e+" name mapping",type:"picklist",defaultValue:"auto",picklistEntries:[{value:"auto",label:"Same names"},{value:"autoprefix",label:"Same names, with added prefix"}],onChange:d});if(s.attr("changemapping")==="autoprefix"){p.push({id:"changemappingprefix",type:"string",label:r.capitalizeFirst(e)+" name prefix"})}}}if(y||S&&f){p.push({id:"successif",label:"Method succeeds if...",type:"picklist",defaultValue:"requestsucceeds",picklistEntries:[{value:"requestsucceeds",label:"Request succeeds"},{value:"responsefieldispresent",label:'"Success" Field in response body is present'},{value:"responsefieldistrue",label:'"Success" Field in response body is true'},{value:"responsefieldequals",label:'"Success" Field in response body equals a value'},{value:"responsebodyequals",label:"Response body equals a value"},{value:"responseheaderispresent",label:'"Success" Header is present in response'},{value:"responseheaderequals",label:'"Success" Header in response equals a value'}],onChange:d});if(o(g,"responsefield")){p.push({id:"successfield",type:"string",label:"Success Field Name"})}else if(o(g,"responseheader")){p.push({id:"successfield",type:"string",label:"Success Header Name",helptext:"The name of a Header in the response which, if present, indicates that this request succeeded, e.g. X-Record-Created"})}if(i(g,"equals")){const e=(()=>{switch(g){case"responsebodyequals":return"Success Response Body Value";case"responsefieldequals":return"Success Field Value";case"responseheaderequals":return"Success Header Value"}})();p.push({id:"successvalue",type:"string",label:e})}}if(c==="insert"&&!S){p.push({id:"insertresponse",label:"Response handling",type:"picklist",defaultValue:"recordinbody",picklistEntries:[{value:"recordinbody",label:"Created record will be returned in response body"},{value:"idinbodyfield",label:"Id of created record will be returned in field in response body"},{value:"idinheader",label:"Id of created record will be returned in response header"},{value:"none",label:"No information about created record will be returned"}],onChange:d});if(s.attr("insertresponse")==="idinbodyfield"){p.push({id:"createdrecordidlocation",type:"string",label:"Name of Field containing created record's Id",helptext:"What is the name of / path to the Field in the expected response that will contain the created record's id? e.g. id, recordId"})}else if(s.attr("insertresponse")==="idinheader"){p.push({id:"createdrecordidlocation",type:"string",label:"Name of Header containing created record's Id",helptext:"What is the name of the Header expected in the response that will contain the created record's id? e.g. X-Record-Id, X-New-Record-Id"})}}if(P&&T){p.push(v().getAllModelFieldsProperty(m))}if(c==="query"){p.push(v().getLimitMethodProperty({component:n,propertiesViewer:l,onChange:function e(t){s.attr("limitmethod",t);n.save().refresh().rebuildProps()}}));if(M){p.push({id:"simplerecordslimitparameter",type:"string",label:"Limit Parameter",helptext:"The URL parameter to be appended to the REST request that determines the amount of records to be requested. Review the REST service's documentation for the appropriate value."});p.push(v().getModelLimitProperty())}else{s.removeAttr("limit simplerecordslimitparameter")}p.push(v().getPaginationMethodProperty({component:n,propertiesViewer:l,onChange:function e(t){s.attr("paginationmethod",t);n.save().refresh().rebuildProps()}}));if(x){p.push({id:"offsetparameter",type:"string",label:"Offset Parameter",helptext:'The URL parameter to be appended to the REST request that, based on the offset in record order, determines which "page" of records to be displayed. Review the REST service\'s documentation for the appropriate value.'})}else{s.removeAttr("offsetparameter")}}return u},Y=function t(r,a){let n=e.builder.core,o=r.get("xmlState"),i=false,s=o.children("methods"),l,d,p=o.attr("type")===y,u=n.getUnsavedChangesWarningProperty({component:r}),f=n.getCoreModelBasicProperties({component:r,propViewer:a}),h=[];if(s.length){l=s.children('[type="query"]').first();if(l.length){i=true}}f.push({id:"type",type:"picklist",label:"Model Behavior",defaultValue:"",picklistEntries:[{value:"",label:"Read-Only"},{value:y,label:"Read/Write"}],onChange:function e(t,n){let i,d,p;if(t===y&&!n){i=o.attr("pathtocontent");d=o.attr("verb");p=o.attr("endpoint"),s=o.children("methods");if(!s.length){s=c("<methods/>").appendTo(o)}l=c("<method/>").attr({type:"query",verb:d,endpoint:p,pathtocontent:i}).appendTo(s);o.removeAttr("verb endpoint pathtocontent payloadsnippet paginationmethod limitmethod limit offsetparameter simplerecordslimitparameter");r.save()}else if(!t&&n===y){s=o.children("methods");if(s.length){l=s.children('[type="query"]').first();if(l.length){i=l.attr("pathtocontent");d=l.attr("verb");p=l.attr("endpoint");o.attr({pathtocontent:i,verb:d,endpoint:p});s.remove();r.save()}}}r.refresh().rebuildProps(a)}});if(!p){d=W({component:r,propertiesViewer:a,type:"query"});if(d&&d.length){if(d[0].props){Array.prototype.push.apply(f,d[0].props)}else{Array.prototype.push.apply(f,d)}}}Array.prototype.push.apply(f,n.getModelLabelProperties());if(!p||i){f.push(n.getModelQueryOnPageLoadProperty({component:r,propViewer:a}))}else if(!i&&p&&o.attr("query")==="true"){o.attr("query","false");r.save()}f.push(n.getAsyncLoadProperty({component:r}),n.getCreateDefaultRowProperty(),n.getModelIdFieldProperty(),n.getModelNameFieldProperty());if(u)h.push(u);return[{name:"Basic",props:f},{name:"Advanced",props:h}]},Q=function e(t,r){t.extensions={rest:{customRequestTemplate:r.attr("customrequesttemplate"),pathToContent:r.attr("pathtocontent"),methods:t.methods,serviceUrl:r.attr("serviceurl")||r.attr("endpoint"),verb:r.attr("verb"),contentType:r.attr("contenttype"),sendChanges:r.attr("sendchanges"),payloadSnippet:r.attr("payloadsnippet"),useResponseSnippet:r.attr("useresponsesnippet"),paginationMethod:r.attr("paginationmethod"),offsetParameter:r.attr("offsetparameter"),simpleRecordsLimitParameter:r.attr("simplerecordslimitparameter"),limitMethod:r.attr("limitmethod"),responseSnippet:r.attr("responsesnippet"),payloadContentType:r.attr("payloadcontenttype")}}},K=function t(a){let n={};if(a&&r.inPlatform([e.constants.NATIVE,e.constants.CORDOVA])&&a.name===e.platform.getDefaultDataSourceName()){n.resource={label:e.$L("File_Resource"),builderProps:function t(r,a,n){let o=[],i=n.prefix||"",s=i+"resource",l=i+"path",d=i+"resourceContentType",p=true,u={};u[s]="{{{name}}}";u[d]="{{{content_type}}}";if(a.attr(d)){p=a.attr(d)===e.constants.MIME_TYPES.ZIP}o.push(e.platform.builder.getStaticResourceProperty({id:s,valueTemplates:u,helptext:"The name of the File where the Image is stored.",onChange:function e(){if(a.attr(l)){a.removeAttr(l);r.save()}r.refresh().rebuildProps();n.additionalOnRebuildAndRefresh&&n.additionalOnRebuildAndRefresh()}}));if(a.attr(s)&&p){o.push(e.platform.builder.getNestedPathProperty({id:l,state:a,nameProperty:s,namespaceProperty:e.platform.getEntityFieldName("static_resource","namespace"),onChange:function e(){r.refresh()}}))}return o},getSrc:function t(a){let n=a.prefix,o=n?n+"resource":"resource",i=n?n+"path":"path",s=n?n+"namespace":"namespace",l=a.definition?a.definition[o]:a.xmlDef?a.xmlDef.attr(o):"",d=a.definition?a.definition[s]:a.xmlDef?a.xmlDef.attr(s):"",p=a.definition?a.definition[i]:a.xmlDef?a.xmlDef.attr(i):"",u=a.context,c=a.mergeSettings;if(p){p=r.mergeAsDataInContext(p,u,c)}if(l){l=r.mergeAsDataInContext(l,u,c)}if(l||p){return r.resolve(e.platform.getSiteResourceUrl({name:l,namespace:d,path:p||null}))}else{return r.reject("No Resource Name or Resource Path Provided")}}}}return n},$=function e(t,r){if(r.extensions){t.methods=r.extensions.rest.methods}t.type="readwrite"},Z=(e,t,r)=>{const a=t.pathToContent||t.pathToContent==="0"?p(e,t.pathToContent):e,n=r.recordsLimit;if(a.length===(n|0)+1){a.pop();return r.paginationOffset?r.paginationOffset+=n:n}},ee=e=>{return e.paginationMethod!==undefined},te=e=>{return e.offsetParameter!==undefined},re=r.parseAsJSONIfString,ae=a.makeLabelFromId,ne=n.generateErrorMessage,oe=n.makeRequest,ie=n.getIdField,se=n.getRowId,le={onlySupportsClientSideFieldConditions:true,runtime:{metadataSource:"local"},composer:{modelConditionLabel:"Condition",modelConditionsLabel:"Conditions",canFieldsBeSelected:function e(t){let r=t.model,a=r.attr("type")===y,n=r.attr("datasource")||r.attr("service"),o=n&&(a?r.children("methods").children("method[verb][verb!=''][endpoint][endpoint!='']").length:r.attr("verb")&&r.attr("endpoint")),i,s="Select a valid Service URL Endpoint and access method";if(t.mode==="components"){i=r.children("fields").children().length;if(o||i){return true}else{return"Please either "+s+", or manually add and define expected fields to this Model."}}else{if(o){return true}else{return"Please "+s+"."}}}},canAutoGenerateConditionsFromFields:false,validConditionTypes:["fieldvalue","param","userinfo","blank","modelmerge"],canConditionsBeGrouped:false,canFieldsBeIndividuallySearched:false,hasGlobalSearchEntities:true,supportsServerSideSort:false};new e.dataSource.DataSourceType({buildEntityMetadataRequest:E,coerceConflictModel:$,skipMetadataWhenQueryingFields:O,getConditionSourceProperties:n.getConditionSourceProperties,getEntityMetadata:F,getEntityMetadataCacheKey:A,getEntityMetadataLoadingMessageFromBreadcrumb:I,getMethodProperties:W,getModelProperties:Y,getNameField:n.getNameField,getIdField:ie,getRowName:n.getRowName,getRowId:se,getUploadMethods:z,getReferenceFieldRelationshipName:H,getReferenceHandler:J,isRelationshipField:X,initialize:N,load:_,makeRequest:oe,name:"REST",populateBreadcrumbFromEntityMetadata:n.populateBreadcrumbFromEntityMetadata,processEntityMetadataRequest:w,properties:le,save:B,setDefaultConditionState:n.setDefaultConditionState,processModelXMLExtensions:Q,getImageSources:K,searchProperties:V,search:G})})(e)}});return t});