skuid.runtime.registerApi("v2","dataSourceTypes/device",function(e){var t=function(e){var t={};function a(r){if(t[r]){return t[r].exports}var i=t[r]={i:r,l:false,exports:{}};e[r].call(i.exports,i,i.exports,a);i.l=true;return i.exports}a.m=e;a.c=t;a.d=function(e,t,r){if(!a.o(e,t)){Object.defineProperty(e,t,{enumerable:true,get:r})}};a.r=function(e){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})};a.t=function(e,t){if(t&1)e=a(e);if(t&8)return e;if(t&4&&typeof e==="object"&&e&&e.__esModule)return e;var r=Object.create(null);a.r(r);Object.defineProperty(r,"default",{enumerable:true,value:e});if(t&2&&typeof e!="string")for(var i in e)a.d(r,i,function(t){return e[t]}.bind(null,i));return r};a.n=function(e){var t=e&&e.__esModule?function t(){return e["default"]}:function t(){return e};a.d(t,"a",t);return t};a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)};a.p="";return a(a.s=714)}({714:function(t,a){const r="Device",i=e.utils,n=e.dataSource.utils,d=e.constants,l=e.native,s=e.time,o=i.inPlatform(d.CORDOVA),u=d.DISPLAY_TYPES,c=u.STRING,p=u.INTEGER,m=u.DATETIME,y=u.DATE,f=u.BOOLEAN,b=u.TEXTAREA,g="extensions",h="metadata";new e.dataSource.DataSourceType({buildEntityMetadataRequest(t){const a=t.model,r=new e.model.Model(a);return r},createActions(){return{openCalendar:{label:"Open Calendar",builderProps:[{id:"date",label:"Date",type:"string",metadata:{id:"date",label:"Date",displaytype:y}}],runtimeExecution(e){let t=s.resolveDateKeyword(e.attr("date"));if(Array.isArray(t)){t=t[0]}if(i.isString(t)){t=new Date(t)}return new Promise((e,a)=>{return l.calendar.openCalendar(t,e,a)})}},createEvent:{label:"Create Event",builderProps:[{id:"title",label:"Title",type:"string"},{id:"location",label:"Location",type:"string"},{id:"notes",label:"Notes",type:"string"},{id:"startDateTime",label:"Start Date Time",type:"string",metadata:{id:"startDateTime",label:"Start Date Time",displaytype:m}},{id:"endDateTime",label:"End Date Time",type:"string",metadata:{id:"endDateTime",label:"End Date Time",displaytype:m}}],runtimeExecution(e,t,a){let r=s.resolveDateKeyword(e.attr("startDateTime")),n=s.resolveDateKeyword(e.attr("endDateTime"));if(i.isUndefined(r)){r=new Date}else if(Array.isArray(r)){r=new Date(r[0])}else if(i.isString(r)){r=new Date(r)}if(i.isUndefined(n)){n=new Date}else if(Array.isArray(n)){n=new Date(n[n.length-1])}else if(i.isString(n)){n=new Date(n)}return new Promise((t,d)=>{return l.calendar.createEventInteractively(i.mergeAsDataInContext(e.attr("title"),a),i.mergeAsDataInContext(e.attr("location"),a),i.mergeAsDataInContext(e.attr("notes"),a),r,n,t,d)}).then(()=>{return new Promise((t,d)=>{return l.calendar.findEvent(i.mergeAsDataInContext(e.attr("title"),a),i.mergeAsDataInContext(e.attr("location"),a),i.mergeAsDataInContext(e.attr("notes"),a),r,n,t,d)})}).then(e=>{return{$NativeAction:{Event:e[0]}}})}},pickContact:{label:"Pick Contact",builderProps:[],runtimeExecution(){return new Promise((e,t)=>{return l.contacts.pickContact(e,t)}).then(e=>{return{$NativeAction:{Contact:e}}})}}}},createNewModelWithMetadata(e,t){return Object.assign({},t,{fields:t.fields.reduce((t,a)=>{const r=e.fields.findIndex(e=>e.id===a.id);if(r>-1)t.push(a);return t},[]),objectName:e.objectName,extensions:e.extensions})},getActions:n.getActionsStatic,getEntityList(){const e=this.prop("metadata"),t=[];for(let a in e){t.push({label:a,value:a})}return i.resolve(t)},getEntityMetadata(e){return i.resolve(e.entities.map(e=>{const t=this.getEntityMetadataCacheKey(e),a=this.prop(h),r=a&&a[t],d=e=>i.isFunction(this.getMethod(r,e));if(!r)return[];const l=r.accessible=d("query"),s=r.createable=d("insert"),o=r.updateable=d("update"),u=r.deleteable=d("delete"),c=r.searchable=d("search");r.readonly=(l||c)&&!s&&!o&&!u;r.objectName=t;r.fields=r.fields.map(e=>{if(!e.label)e.label=n.makeLabelFromId(e.id);if(!e.editable)e.editable=false;if(!e.creatable)e.creatable=false;if(!e.accessible)e.accessible=true;return e});return r}))},getEntityMetadataCacheKey(e){if(i.isString(e))return e;return e.objectName||i.getObjectProperty(e,"".concat(g,".entityName"))},getEntityMetadataLoadingMessageFromBreadcrumb(){return"Loading Data Source metadata..."},getIdField(e){return this.prop(h)[e.objectName].idField},getMethod(e,t){return this.getMethods(e)[t]||{}},getMethods(e){return i.getObjectProperty(e,g)||e.methods||{}},getModelProperties(t,a,r){const i=this,n=e.builder.core,d=t.get("xmlState"),l=n.getCoreModelBasicProperties({component:t,propViewer:a});l.push({id:"entity",type:"entity",dataSourceTypeName:this.name,dataSourceName:d.attr("datasource"),label:"Model Entity",onChange(e,a){i.onSelectEntity(e,a,t,r);t.save()}},n.getModelQueryOnPageLoadProperty({component:t,propViewer:a}));return[{name:"Basic",props:l}]},getNameField(e){return this.prop(h)[e.objectName].nameField},getRowName(e,t){return t.getFieldValue(e,this.getNameField(t),true)},getRowId(e,t){return t.getFieldValue(e,this.getIdField(t),true)},initialize(e){return e},load(e,t){let a,r=e[0];if(!o){return i.resolve()}return r.dataSource.getEntityMetadata(Object.assign({},t,{entities:[r]})).then(e=>{e=e._unwrap();a=this.createNewModelWithMetadata(r,e);return e.extensions.methods.query(r)}).then(e=>{a.data=e||[];return[a]})},name:r,onSelectEntity(e,t,a,r){const n=e,d=r.getCachedEntityMetadata(n),l=i.getObjectProperty(d.getExtensions(),"defaultConditions"),s=a.get("xmlState"),o=s.children("conditions").empty();if(l&&l.length>0){o.append(l.map(e=>{const t=i.makeXMLDoc('<condition value="" />');for(let a in e){t.attr(a,e[a])}t.attr("field",e["sourceparam"]);return t}))}a.refresh()},processEntityMetadataRequest(e){const t=Object.assign({},e.result,{extensions:{}}),a=t.extensions,r=t.methods,i=t.defaultConditions;delete t.methods;a.methods=r;if(i){delete t.defaultConditions;a.defaultConditions=i}return t},processModelXMLExtensions(e,t){const a=t.attr("entity");e.extensions={entityName:a};e.objectName=a},properties:{[h]:{Calendar:{idField:"id",nameField:"name",label:"Calendar",labelPlural:"Calendars",fields:[{id:"id",createable:true,editable:false},{id:"name",createable:true,editable:false},{id:"type",createable:true,editable:false}],methods:{query(){if(!l.calendar){return i.reject("This native app does not contain calendar features.")}return new Promise((e,t)=>{return l.calendar.listCalendars(t=>{e(t)},e=>{t(e)})})}}},Contact:{idField:"id",nameField:"displayName",fields:[{id:"id",displaytype:p},{id:"displayName",displaytype:c,createable:true,editable:true},{id:"name",displaytype:c,editable:true},{id:"firstName",displaytype:c,createable:true,editable:true},{id:"middleName",displaytype:c,createable:true,editable:true},{id:"lastName",displaytype:c,createable:true,editable:true},{id:"fullName",displaytype:c}],methods:{query(){if(!l.contacts){return i.reject("This native app needs to be upgraded to use contact features.")}const e=[];for(let t in l.contacts.fieldType){e.push(t)}return new Promise((t,a)=>{l.contacts.find(e,e=>{for(let t=0;t<e.length;t++){e[t].firstName=e[t].name.givenName;e[t].middleName=e[t].name.middleName;e[t].lastName=e[t].name.familyName;e[t].fullName=e[t].name.formatted}t(e)},e=>{a(e)})})},insert(e,t){if(!l.contacts){return i.reject("This native app needs to be upgraded to use contact features.")}return new Promise((e,a)=>{const r=l.contacts.create();for(let e in t){r[e]=t[e]}r.save(e,a)})},update(e,t,a){if(!l.contacts){return i.reject("This native app needs to be upgraded to use contact features.")}const r=e.getRowById(t),n={};if(!r){return i.reject("Could not find contact.")}if(a.displayName)r.displayName=a.displayName;if(a.firstName)n.givenName=a.firstName;if(a.middleName)n.middleName=a.middleName;if(a.lastName)n.familyName=a.lastName;if(i.size(n))a.name=n;return new Promise((e,t)=>{r.save(e,t)})},delete(e,t){if(!l.contacts){return i.reject("This native app needs to be upgraded to use contact features.")}const a=e.getRowById(t.id);if(!a){return i.reject("Could not find contact.")}return new Promise((e,t)=>{a.remove(e,t)})}}},ContactEmail:{idField:"id",nameField:"id",label:"Contact Email",labelPlural:"Contact Emails",fields:[{id:"id",displaytype:p},{id:"contact_id",displaytype:p},{id:"pref",displaytype:f},{id:"type",displaytype:c},{id:"value",displaytype:c}],methods:{query(e){if(!l.contacts){return i.reject("This native app needs to be upgraded to use contact features.")}const t=e.conditions.filter(e=>e.name==="contact_id")[0],a=t.value;if(!a)return i.resolve();const r=[];for(let e in l.contacts.fieldType){r.push(e)}return new Promise((e,t)=>{l.contacts.find(r,t=>{let r=t&&t.filter(e=>e.id===a);if(!r||!r.length)e();e(r[0].emails)},e=>{t(e)})})}},defaultConditions:[{sourcetype:"param",sourceparam:"contact_id",name:"contact_id",label:"Contact Id",state:"filterablerequired",type:"fieldvalue",required:true,value:""}]},ContactNumber:{idField:"id",nameField:"id",label:"Contact Number",labelPlural:"Contact Numbers",fields:[{id:"id",displaytype:p},{id:"contact_id",displaytype:p},{id:"pref",displaytype:f},{id:"type",displaytype:c},{id:"value",displaytype:c}],methods:{query(e){if(!l.contacts){return i.reject("This native app needs to be upgraded to use contact features.")}const t=e.conditions.filter(e=>e.name==="contact_id")[0],a=t.value;if(!a)return i.resolve();const r=[];for(let e in l.contacts.fieldType){r.push(e)}return new Promise((e,t)=>{l.contacts.find(r,t=>{let r=t&&t.filter(e=>e.id===a);if(!r||!r.length)e();e(r[0].phoneNumbers)},e=>{t(e)})})}},defaultConditions:[{sourcetype:"param",sourceparam:"contact_id",name:"contact_id",label:"Contact Id",state:"filterablerequired",type:"fieldvalue",required:true,value:""}]},DeviceInfo:{idField:"uuid",nameField:"uuid",label:"Device Info",labelPlural:"Device Info",fields:[{id:"uuid",displaytype:c,required:true},{id:"manufacturer",displaytype:c,required:true},{id:"model",displaytype:c,required:true},{id:"platform",displaytype:c,required:true},{id:"version",displaytype:c,required:true}],methods:{query(){return[l.device]}}},Event:{idField:"id",nameField:"id",label:"Event",labelPlural:"Events",fields:[{id:"allDay",displaytype:f},{id:"endDate",displaytype:m},{id:"startDate",displaytype:m},{id:"location",displaytype:c},{id:"id",displaytype:p},{id:"title",displaytype:c},{id:"message",displaytype:b}],methods:{query(e){if(!l.calendar){return i.reject("This native app does not contain calendar features.")}const t=i.Deferred(),a={},r=new Date;r.setFullYear(r.getFullYear()+1);e.conditions.forEach(e=>a[e.name]=e.value);let n=a.dtstart?new Date(a.dtstart):new Date,d=a.dtend?new Date(a.dtend):r;l.calendar.findEvent("","","",n,d,e=>{const a=[];e.forEach(e=>{e.allDay=!!e.allDay;a.push(e)});t.resolve(a)},e=>{t.reject(e)});return t.promise()}},defaultConditions:[{sourcetype:"param",sourceparam:"calendar_id",name:"calendar_id",label:"Calendar Id",state:"filterablerequired",type:"fieldvalue",required:true,value:""},{sourcetype:"param",sourceparam:"startDate",name:"startDate",label:"Start Date",state:"filterablerequired",type:"fieldvalue",required:true,value:""},{sourcetype:"param",sourceparam:"endDate",name:"endDate",label:"End Date",state:"filterablerequired",type:"fieldvalue",required:true,value:""}]}}},save(t,a){const r=a.dataSource;return Promise.all(t.operations.map(t=>{const i=t.type,n=e.$M(t.id);return r.getEntityMetadata(Object.assign({},a,{entities:[i]})).then(e=>{e=e._unwrap();const a=e.extensions.methods;let r=[];for(let e in t.deletes){a.delete&&r.push(a.delete(n,t.deletes[e]))}for(let e in t.inserts){a.insert&&r.push(a.insert(n,t.inserts[e]))}for(let e in t.updates){a.update&&r.push(a.update(n,e,t.updates[e]))}return Promise.all(r)})}))}})}});return t});